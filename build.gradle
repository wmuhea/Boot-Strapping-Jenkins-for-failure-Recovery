import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'base'
    id 'com.palantir.docker' version '0.25.0'
    id 'com.palantir.docker-run' version '0.25.0'
    id 'pl.allegro.tech.build.axion-release' version '1.12.0'
}

project.version = scmVersion.version

docker{
    name "${project.name}:${project.version}"
    files "plugins.txt", "seedJob.xml"
}

// To run the docker image as a container, we need

/*Process process
if (DefaultNativePlatform.getCurrentOperatingSystem().isWindows()){
    process = "docker run --rm -v /var/run/docker.sock:/var/run/socker.sock alpine stat -c %g /var/run/docker.sock".execute()
}
else {
    process = "stat -c %g /var/run/docker.sock".execute()
}
def out = new ByteArrayOutputStream()
process.waitForProcessOutput(out, System.err)

String dockerSockGroupId = out.toString().trim()*/

String dockerSockGroupId = "root"

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '8080:8080'
    clean true // when the docker container is stopped it will also be removed
    daemonize false // log output will come directly to the console
    arguments '-v', '//var/run/docker.sock:/var/run/docker.sock', '--group-add', dockerSockGroupId
}



